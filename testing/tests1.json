{
	"info": {
		"_postman_id": "e4de94a6-c9aa-4e1b-b06a-cf43e9146c70",
		"name": "Client MIgration",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "19644413"
	},
	"item": [
		{
			"name": "Token Generation Endpoint",
			"item": [
				{
					"name": "Positive TC",
					"item": [
						{
							"name": "Generate_valid_JWT_token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(\"Verify that user should get response using valid JWT client id\");",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test(\"Validate access_token\",function(){",
											"    pm.expect(responseData.access_token).to.not.be.null;",
											"})",
											"",
											"pm.test(\"Validate expires_in\",function(){",
											"    pm.expect(responseData.expires_in).to.eql(3600)",
											"})",
											"",
											"pm.test(\"Validate state\",function(){",
											"    pm.expect(responseData.state).to.eql(null)",
											"})",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "g8cfk4y8hbrpy9s5pt45mjvz",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "qmavNy6zyA",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": "{{Dev_Url}}/rest/oauth2/v1/token"
							},
							"response": []
						},
						{
							"name": "Generate_valid_OAuth_token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"console.log(\"Verify that user should get response using valid OAuth client id\");",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test(\"Validate access_token\",function(){",
											"    pm.expect(responseData.access_token).to.not.be.null;",
											"})",
											"",
											"pm.test(\"Validate refresh_token\",function(){",
											"    pm.expect(responseData.refresh_token).to.not.be.null;",
											"})",
											"",
											"pm.test(\"Validate token_type\",function(){",
											"    pm.expect(responseData.token_type).to.eql(\"bearer\")",
											"})",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.environment.set(\"accessToken\",responseData.access_token)",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "g8cfk4y8hbrpy9s5pt45mjvz",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "qmavNy6zyA",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": "{{Dev_Url}}/rest/oauth2/v1/token"
							},
							"response": []
						},
						{
							"name": "Using_Valid_Client_Secret",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(\"Verify that user should get proper response using valid client secret\");",
											"var responseData = pm.response.json();",
											"pm.test(\"Validate access_token\",function(){",
											"    pm.expect(responseData.access_token).to.not.be.null;",
											"})",
											"",
											"pm.test(\"Validate user_context\",function(){",
											"    pm.expect(responseData.user_context).to.eql(null)",
											"})",
											"",
											"pm.test(\"Validate uri\",function(){",
											"    pm.expect(responseData.uri).to.eql(null)",
											"})",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "g8cfk4y8hbrpy9s5pt45mjvz",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "qmavNy6zyA",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": "{{Dev_Url}}/rest/oauth2/v1/token"
							},
							"response": []
						},
						{
							"name": "Using_valid_Grant_Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(\"Verify that user should get proper response using valid grant type\");",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test(\"Validate access_token\",function(){",
											"    pm.expect(responseData.access_token).to.not.be.null;",
											"})",
											"",
											"pm.test(\"Validate scope\",function(){",
											"    pm.expect(responseData.scope).to.eql(null)",
											"})",
											"",
											"pm.test(\"Validate extended\",function(){",
											"    pm.expect(responseData.extended).to.eql(null)",
											"})",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "g8cfk4y8hbrpy9s5pt45mjvz",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "qmavNy6zyA",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": "{{Dev_Url}}/rest/oauth2/v1/token"
							},
							"response": []
						}
					]
				},
				{
					"name": "Negative TC",
					"item": [
						{
							"name": "Using_Invalid_ClientId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(\"Verify that user should get error message using invalid client id\");",
											"",
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"",
											"pm.test(\"Response is correct\", function () {",
											"    pm.response.to.have.body(\"<h1>Developer Inactive</h1>\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "g8cfk4y8hbrpy9s5pt45mjvzuz",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "qmavNy6zyA",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": "{{Dev_Url}}/rest/oauth2/v1/token"
							},
							"response": []
						},
						{
							"name": "Using_Invalid_Client_Secret",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(\"Verify that user should get error message using invalid client secret\");",
											"",
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Invalid Client_secret\", function () {",
											"    pm.response.to.have.body(\"Invalid Client\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "g8cfk4y8hbrpy9s5pt45mjvz",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "qmavNy6zyAza",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": "{{Dev_Url}}/rest/oauth2/v1/token"
							},
							"response": []
						},
						{
							"name": "Using_Invalid_Grant_Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(\"Verify that user should get error message using invalid grant type\")",
											"",
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Invalid grant_type\", function () {",
											"    pm.response.to.have.body(\"Invalid grant_type\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "g8cfk4y8hbrpy9s5pt45mjvz",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "qmavNy6zyA",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "client_credentia",
											"type": "text"
										}
									]
								},
								"url": "{{Dev_Url}}/rest/oauth2/v1/token"
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Request endpoint",
			"item": [
				{
					"name": "With OAuth Token",
					"item": [
						{
							"name": "Positive TC",
							"item": [
								{
									"name": "Using_Valid_Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"console.log(\"Verify that user should get response using new OAuthbearer token\");",
													"var responseData = pm.response.json();",
													"",
													"pm.test(\"Validate abo\",function(){",
													"    pm.expect(responseData.volumeDtlPeriods[0].abo).to.eql(7022954238)",
													"})",
													"",
													"pm.test(\"Validate volumeDetails\",function(){",
													"    pm.expect(responseData.volumeDtlPeriods[0].volumeDetails).to.eql(null)",
													"})",
													"",
													"pm.test(\"Validate period\",function(){",
													"    pm.expect(responseData.volumeDtlPeriods[0].period).to.eql(202211)",
													"})",
													"",
													"pm.test(\"Validate httpStatus\",function(){",
													"    pm.expect(responseData.volumeDtlPeriods[0].httpStatus).to.eql(404)",
													"})",
													"",
													"pm.test(\"Validate aff\",function(){",
													"    pm.expect(responseData.volumeDtlPeriods[0].aff).to.eql(200)",
													"})",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{accessToken}}"
											}
										],
										"url": {
											"raw": "{{Dev_Url}}/magic/v2/Volume/getDetails?reqAff=200&reqAbo=7022954238&affAbo=200%2C7022954238&maxLevels=1&period=202211&intlFrontline=1&busNature=1%7C2%7C3%7C5%7C6%7C7%7C8%7C9&volumeTypes=001%7C005&showActiveOnly=true&stopAtPlatinum=true",
											"host": [
												"{{Dev_Url}}"
											],
											"path": [
												"magic",
												"v2",
												"Volume",
												"getDetails"
											],
											"query": [
												{
													"key": "reqAff",
													"value": "200"
												},
												{
													"key": "reqAbo",
													"value": "7022954238"
												},
												{
													"key": "affAbo",
													"value": "200%2C7022954238"
												},
												{
													"key": "maxLevels",
													"value": "1"
												},
												{
													"key": "period",
													"value": "202211"
												},
												{
													"key": "intlFrontline",
													"value": "1"
												},
												{
													"key": "busNature",
													"value": "1%7C2%7C3%7C5%7C6%7C7%7C8%7C9"
												},
												{
													"key": "volumeTypes",
													"value": "001%7C005"
												},
												{
													"key": "showActiveOnly",
													"value": "true"
												},
												{
													"key": "stopAtPlatinum",
													"value": "true"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Negative TC",
							"item": [
								{
									"name": "Using_Expire_Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"console.log(\"Verify that user should get error message after OAuth bearer token expires\");",
													"",
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Response is correct\", function () {",
													"    pm.response.to.have.body(\"<h1>Developer Inactive</h1>\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer 26unr2kp6jr8x8k7cgudhqkn"
											}
										],
										"url": {
											"raw": "{{Dev_Url}}/magic/v2/Volume/getDetails?reqAff=200&reqAbo=7022954238&affAbo=200%2C7022954238&maxLevels=1&period=202211&intlFrontline=1&busNature=1%7C2%7C3%7C5%7C6%7C7%7C8%7C9&volumeTypes=001%7C005&showActiveOnly=true&stopAtPlatinum=true",
											"host": [
												"{{Dev_Url}}"
											],
											"path": [
												"magic",
												"v2",
												"Volume",
												"getDetails"
											],
											"query": [
												{
													"key": "reqAff",
													"value": "200"
												},
												{
													"key": "reqAbo",
													"value": "7022954238"
												},
												{
													"key": "affAbo",
													"value": "200%2C7022954238"
												},
												{
													"key": "maxLevels",
													"value": "1"
												},
												{
													"key": "period",
													"value": "202211"
												},
												{
													"key": "intlFrontline",
													"value": "1"
												},
												{
													"key": "busNature",
													"value": "1%7C2%7C3%7C5%7C6%7C7%7C8%7C9"
												},
												{
													"key": "volumeTypes",
													"value": "001%7C005"
												},
												{
													"key": "showActiveOnly",
													"value": "true"
												},
												{
													"key": "stopAtPlatinum",
													"value": "true"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Using_Invalid_Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"console.log(\"Verify that user should get error message using invalid OAuth bearer token\");",
													"",
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Response is correct\", function () {",
													"    pm.response.to.have.body(\"<h1>Developer Inactive</h1>\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer 26unr2kp6jr8x8k7cgudhq"
											}
										],
										"url": {
											"raw": "{{Dev_Url}}/magic/v2/Volume/getDetails?reqAff=200&reqAbo=7022954238&affAbo=200%2C7022954238&maxLevels=1&period=202211&intlFrontline=1&busNature=1%7C2%7C3%7C5%7C6%7C7%7C8%7C9&volumeTypes=001%7C005&showActiveOnly=true&stopAtPlatinum=true",
											"host": [
												"{{Dev_Url}}"
											],
											"path": [
												"magic",
												"v2",
												"Volume",
												"getDetails"
											],
											"query": [
												{
													"key": "reqAff",
													"value": "200"
												},
												{
													"key": "reqAbo",
													"value": "7022954238"
												},
												{
													"key": "affAbo",
													"value": "200%2C7022954238"
												},
												{
													"key": "maxLevels",
													"value": "1"
												},
												{
													"key": "period",
													"value": "202211"
												},
												{
													"key": "intlFrontline",
													"value": "1"
												},
												{
													"key": "busNature",
													"value": "1%7C2%7C3%7C5%7C6%7C7%7C8%7C9"
												},
												{
													"key": "volumeTypes",
													"value": "001%7C005"
												},
												{
													"key": "showActiveOnly",
													"value": "true"
												},
												{
													"key": "stopAtPlatinum",
													"value": "true"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		}
	]
}